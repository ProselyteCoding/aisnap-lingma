# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# The following `prisma+postgres` URL is similar to the URL produced by running a local Prisma Postgres 
# server with the `prisma dev` CLI command, when not choosing any non-default ports or settings. The API key, unlike the 
# one found in a remote Prisma Postgres URL, does not contain any sensitive information.

# 数据库连接URL - 请根据你的实际数据库配置修改
# 如果你使用 MySQL，格式为: mysql://用户名:密码@主机:端口/数据库名
# 如果你使用 PostgreSQL，格式为: postgresql://用户名:密码@主机:端口/数据库名
# 示例 MySQL 配置 (需要修改为你的实际用户名(当前默认为 root)、密码):
DATABASE_URL="mysql://root:password@localhost:3306/aisnap"
# 示例 PostgreSQL 配置 (需要修改为你的实际用户名、密码和数据库名):
# DATABASE_URL="postgresql://postgres:your_actual_postgres_password@localhost:5432/aisnap"

# NEXTAUTH_SECRET - 应该是一个强随机字符串，用于加密 tokens 和 cookies
# 可以使用 node -e "console.log(require('crypto').randomBytes(32).toString('hex'))" 生成
# 或者使用下面这个示例值 (生产环境请更换为你的自定义值):
NEXTAUTH_SECRET="J8K9mN2pQ5sT8uV1xY4zB7cF0gH3jL6n"

# NEXTAUTH_URL - 应用程序的完整 URL，本地为 "http://localhost:3000"
NEXTAUTH_URL="http://localhost:3000"

# API_KEY - 通义千问模型API密钥，如没有可联系作者，此信息不便于发布在仓库。此密钥仅影响图像识别转化功能。
API_KEY=xxxxxxxxxxxx